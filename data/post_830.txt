作者kyrie77 (KI)看板NTUcourse標題[評價] 108-1 陳健輝 演算法設計方法論時間Sun Feb 23 02:39:58 2020
※ 本文是否可提供臺大同學轉作其他非營利用途？（須保留原作者 ID）
         （是／否／其他條件）： 是


      哪一學年度修課： 108-1

      ψ 授課教師 (若為多人合授請寫開課教師，以方便收錄)

        陳健輝

      λ 開課系所與授課對象 (是否為必修或通識課 / 內容是否與某些背景相關) 

        資訊工程學研究所

        3類加簽，資工系/外系大學部、外系研究所都可加簽

      δ 課程大概內容

        [懶人包]
        ‧　Greedy Method
        ‧　Dynamic Programming (DP)
        ‧　Prune-and-Search (P&S)
        ‧　Branch-and-Bound (B&B)
        ‧　Divide-and-Conquer (D&C)
        ‧　Plane Sweep

        考試題目是中間四個
        期中考寫 DP、P&S
        期末考寫 B&B、D&C

        [課程進度]
        第1週   09/09   課程介紹、Greedy Method
        第2週   09/16   Greedy Method、DP
        第3週   09/23   DP
        第4週   09/30   停課(颱風假)
        第5週   10/07   DP、P&S
        第6週   10/14   P&S
        第7週   10/21   P&S、B&B
        第8週   10/28   B&B
        第9週   11/04   第一次考試 (期中考)
        ---------------------------------------
        第10週  11/11   B&B、D&C
        第11週  11/18   D&C
        第12週  11/25   D&C
        第13週  12/02   D&C、Plane Sweep
        第14週  12/09   第二次考試 (期末考)
        ---------------------------------------
        第15週  12/16   論文報告: 第 1 、 2 組
        第16週  12/23   論文報告: 第 3 、 4 組
        第17週  12/30   論文報告: 第 5 、 6 組
        第18週  01/06   論文報告: 第 7 、 8 組
        ---------------------------------------
        (因遇颱風假，補考延後至寒假第1週)
        第19週  01/13   補考

      Ω 私心推薦指數(以五分計) ★★★★★
★=1顆星，☆=0.5顆星

        私心推薦       ★★★★☆
        扎實度         ★★★★
        甜涼度         ★★★★☆
        討厭寫美勞作業 ★★       (後面會說明)

      η 上課用書(影印講義或是指定教科書)

        老師自己的講義，偶爾搭配板書

      μ 上課方式(投影片、團體討論、老師教學風格)

        就是中規中矩的上課，老師的講義寫的很簡略
        大部分都是例子和圖片，算是蠻簡潔扼要的
        通常都是先教演算法大致的步驟，然後再分析複雜度
        教到特定演算法時，老師會介紹幾個能夠用這個演算法解的題目
        講義有不少篇幅都是解題的過程，列出每個步驟做了什麼

      σ 評分方式(給分甜嗎？是紮實分？)

        (1) 期中考   20% (2題程式題)
        (2) 期末考   20% (2題程式題)
        (3) 作業     40% (4份論文閱讀報告)
        (4) 分組報告 20% (期末論文團體報告)

      ρ 考題型式、作業方式

        期中考：
         (1) Longest Common Subsequence (DP)
         (2) 2-D Linear Programming (P&S)

        期末考：
         (3) 0/1 Knapsack problem (B&B)
         (4) 2-D Closest Pair (D&C)

        補考成績計算 (4題皆可補考)：

        進步分數 = 補考分數 - 原始分數

        if 進步分數 < 0:
                最終成績 = 原始分數
        else:
                最終成績 = 原始分數 + 進步分數 x 0.9
# 很佛的計算方式，第一次考不好的記得來補考

        期中、期末考都算是take home exam，寫C/C++
        各2題程式題，每題占學期總分10分
        學期初助教就會給大家online judge的網址
        可以上去註冊帳號練習，每題都會有10個練習用測資
        每題都必須以規定的演算法實作，且助教說會抓抄襲

        考試時就只要把自己的筆電帶去教室
        助教會在oj上開期中/期末考題，有另外10筆考試用測資
        沒有要求一定要AC，對1個測資得1分，算是蠻佛的 XD

        作業的部分是看指定論文寫報告
        4個主題各1篇，應該是各占學期總分10分
　      ‧　Dynamic Programming (DP)
　      ‧　Prune-and-Search (P&S)
　      ‧　Branch-and-Bound (B&B)
　      ‧　Divide-and-Conquer (D&C)

        手寫或打字皆可，打字的話也要印出來交紙本報告
        手寫的話字不能太醜，老師改完第一份作業時有抱怨 XD
        「雖然我不要求作業打字但至少不要讓我懷疑是否我的眼睛有業障」

        等第制給分：
                E (Excellent)   9.2
                G (Good)        8.4
                F (Fair)        7.6
                P (Poor)        6.8

        (後面各等第的分數是助教跟我說的，不是很確定)

        --------------------------------------------

        [個人心得]

        (1) 程式部分

        我覺得程式部分P&S感覺最不好寫，B&B則是很容易TLE
        如果有人一起修課可能比較好，可以一起討論演算法或debug
        因為老師上課通常只講大方向，實作時有些小地方不會特別提

        (2) 論文閱讀報告

        每篇閱讀報告必須包含以下內容，且必須用例子與圖表輔助說明：
        ‧　問題定義
        ‧　解法敘述(勿列出詳細程式碼)
        ‧　讀後心得

        老師要的是 reading report，而不是 reading summary
        所以報告中最好要有自己的觀點和敘述方式
        只是讀完論文然後摘要的話感覺都不會太高分，頂多拿G

        而且老師很喜歡圖例 (從他的上課講義就可以略知一二)
        所以寫報告的時候，最好想一些例子或畫圖說明
        像是B&B那份作業應該是最好寫的
        因為例子很好想，圖也很好畫 (就是樹而已)
        像是Voronoi diagram (D&C)那篇，我覺得圖根本超難畫
        我又懶的用電腦畫，所以寫報告時就直接剪原論文的圖來用
        最後也只有拿G而已，虧我寫的很認真 QQ
        又畫圖、又剪剪貼貼的，真的很像是美勞作業(?)

        (3) 團體報告

        ＃ 注意事項：
        ‧　投影片記得附上原論文名稱和作者
        ‧　一組不要太多人上去報告 (可能1-2人為佳)
        ‧　不一定要忠於原論文的符號，可使用更好懂的敘述方式
            (老師寫的那篇符號就很多，很難讀懂 = =)

        最後據助教說法，其實不要報太爛幾乎都是90分
        沒什麼鑑別度，好像只有1.2組比較低(?)

        --------------------------------------------

        [修課策略]

        這堂課我覺得以所課的標準來看loading真的不算重
        程式題可以早點開始寫，不要拖到期中期末 XD
        但據說好像不調分，如果想拿A+的話作業要好好寫

        假設大家團體報告都是拿90分，90 * 20% = 18

        A+的標準是總成績90分以上：

        如果作業普普通通全部都拿G，8.4 * 4 = 33.6

        90 - 18 - 33.6 = 38.4 (程式分數)
        38.4 / 4 = 9.6 (平均每題程式分數)
        → 程式題幾乎都要全對，或是補考時AC才有機會A+

        反之，如果你作業都拿E，9.2 * 4 = 36.8

        90 - 18 - 36.8 = 35.2 (程式分數)
        35.2 / 4 = 8.8 (平均每題程式分數)
        → 程式題平均只要對9個測資就有機會A+

        因此
        (1) 如果你是coding大神，作業平均拿G即可爽拿A+
(2) 如果你是寫作業能手，程式題盡量過9個測資以上
ω 其它(是否注重出席率？如果為外系選修，需先有什麼基礎較好嗎？老師個性？
加簽習慣？嚴禁遲到等…)

        不注重出席率，期末報告時大家幾乎都只來自己組別報告那週

        [補充]
        每組報告時間不一，不過幾乎都在1小時內結束
        所以1週2組估2小時，加上中間休息時間10-15分鐘
        最後幾週幾乎都會提早半節課到1節課的時間下課
        ------

        外系選修的話感覺寫過C/C++比較好，寫過其他語言應該也OK

        老師給人的感覺應該是和藹的老人 XD
        上課時偶爾會說天氣如何、之前跟老婆/女兒/研究生的故事等等

        加簽是3類加選，修課人數上限是50位 (今年45位學生)
        我猜人數上限是因為分組報告每組5-7人不等
        分組報告人數：(2組/週) * (4週) * (6人/組) = 48人

        另外也推一下本學期的助教
        有問題寄信去問或是下課去問都會很熱心的解答

      Ψ 總結

        整體來說應該算是一堂中規中矩、扎實偏甜的好課
        可以練習coding、閱讀論文、上台報告等
        loading不會太重，又能學到一些東西
        但對於修過ADA的人來說應該算是小菜一碟XD


--
※ 發信站: 批踢踢實業坊(ptt.cc), 來自: 111.252.229.43 (臺灣)
※ 文章網址: https://www.ptt.cc/bbs/NTUcourse/M.1582396800.A.478.html
※ 編輯: kyrie77 (111.252.229.43 臺灣), 02/23/2020 03:00:25
推 heap5566: 補考還有九成真的佛心來的 02/23 11:37

真的很佛XD

推 jason985: 請問一組的報告時間約為多久? 02/23 22:42
推 oopzzozzo: 詳細推 02/23 22:53
推 aeiou335: 好課 02/24 00:40
推 cuteSquirrel: 推 02/24 01:24

[補充]
每組報告時間不一，不過幾乎都在1小時內結束
所以1週2組估2小時，加上中間休息時間10-15分鐘
最後幾週幾乎都會提早半節課到1節課的時間下課
※ 編輯: kyrie77 (111.252.231.78 臺灣), 02/24/2020 20:14:25
推 jason985: 謝謝 02/25 00:27
